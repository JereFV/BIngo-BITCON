/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CapaPresentacion;

import CapaLógica.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jerem
 */
public class PantallaConfiguracion extends javax.swing.JFrame {
    private Bingo bingo;
    private boolean tablerosGenerados;
    //Atributos para validación de la existencia de patrones digitados por el usuario
    private boolean existenciaPatron1;
    private boolean existenciaPatron2;
    private boolean existenciaPatron3;
    
    public PantallaConfiguracion() {
        initComponents();
        bingo = new Bingo();
        tablerosGenerados = false;
        existenciaPatron1 = false;
        existenciaPatron2 = false;
        existenciaPatron3 = false;
        //Se crea objetos con el modelo de cada tabla utilizando la clase DefaultTableModel
        DefaultTableModel modeloTabla1  = (DefaultTableModel) jTblPatron1.getModel();
        DefaultTableModel modeloTabla2 = (DefaultTableModel) jTblPatron2.getModel();
        DefaultTableModel modeloTabla3 = (DefaultTableModel) jTblPatron3.getModel();
        
        /*Se utiliza la clase TableModelListener para poder hacer uso del método tableChanged el cual se ejecuta cada vez
        que se realice cualquier modificación sobre la tabla, en este caso se llama al método encargado de dar el formato
        deseado a las tablas.*/
        modeloTabla1.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {               
                formatoTablas(jTblPatron1);
                validarCaracter(modeloTabla1, jTblPatron1);                       
            }                  
        });
        
        modeloTabla2.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {               
                formatoTablas(jTblPatron2);
                validarCaracter(modeloTabla2, jTblPatron2);
            }
        });
        
        modeloTabla3.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {               
                formatoTablas(jTblPatron3);
                validarCaracter(modeloTabla3, jTblPatron3);
            }
        });
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGeneracionNumeros = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jRbAutomatico = new javax.swing.JRadioButton();
        jRbManual = new javax.swing.JRadioButton();
        jTextField2 = new javax.swing.JTextField();
        jCboSistemNumerico = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblPatron3 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTxtPatron3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTxtPatron1 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTxtPatron2 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTblPatron1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTblPatron2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMnuGenerarTableros = new javax.swing.JMenu();
        jMnuIniciarJuego = new javax.swing.JMenu();
        jMnuMenuPrincipal = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(873, 655));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRbAutomatico.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupGeneracionNumeros.add(jRbAutomatico);
        jRbAutomatico.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jRbAutomatico.setText("Automático");
        jRbAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbAutomaticoActionPerformed(evt);
            }
        });
        jPanel1.add(jRbAutomatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, 30));

        jRbManual.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupGeneracionNumeros.add(jRbManual);
        jRbManual.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jRbManual.setText("Manual");
        jRbManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbManualActionPerformed(evt);
            }
        });
        jPanel1.add(jRbManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, -1));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jTextField2.setText("Seleccione el método de generación de números");
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        jCboSistemNumerico.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jCboSistemNumerico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quinario (0 al 4)", "Octal (0 al 7)", "Decimal (0 al 9)", "Duodecimal (0 al 11)", "Hexadecimal (0 al 15)" }));
        jCboSistemNumerico.setSelectedIndex(-1);
        jCboSistemNumerico.setToolTipText("");
        jPanel1.add(jCboSistemNumerico, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, -1, -1));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jTextField3.setText("Seleccione el sistema númerico a utilizar");
        jPanel1.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 160, -1, -1));

        jTblPatron3.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jTblPatron3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "B", "I", "T", "C", "O", "N"
            }
        ));
        jTblPatron3.setPreferredSize(new java.awt.Dimension(450, 150));
        jTblPatron3.setRequestFocusEnabled(false);
        jTblPatron3.setRowHeight(25);
        jTblPatron3.setShowGrid(true);
        jTblPatron3.setSurrendersFocusOnKeystroke(true);
        jTblPatron3.getTableHeader().setResizingAllowed(false);
        jScrollPane2.setViewportView(jTblPatron3);
        if (jTblPatron3.getColumnModel().getColumnCount() > 0) {
            jTblPatron3.getColumnModel().getColumn(0).setResizable(false);
            jTblPatron3.getColumnModel().getColumn(0).setHeaderValue("B");
            jTblPatron3.getColumnModel().getColumn(1).setHeaderValue("I");
            jTblPatron3.getColumnModel().getColumn(2).setHeaderValue("T");
            jTblPatron3.getColumnModel().getColumn(3).setHeaderValue("C");
            jTblPatron3.getColumnModel().getColumn(4).setHeaderValue("O");
            jTblPatron3.getColumnModel().getColumn(5).setHeaderValue("N");
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 500, 310, 173));
        jScrollPane2.getAccessibleContext().setAccessibleName("");

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial Black", 0, 22)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Seleccione  los diferentes patrones de ganar en cada uno de los\ncartones , para ello debe digitar una \"x\" sobre la posición que se \ndesea incluir en el patrón y además digitar un nombre.");
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 810, 110));

        jTxtPatron3.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTxtPatron3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtPatron3.setToolTipText("");
        jTxtPatron3.setName(""); // NOI18N
        jPanel1.add(jTxtPatron3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 460, 250, -1));
        jTxtPatron3.getAccessibleContext().setAccessibleName("");

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTextField4.setText("Nombre del patrón:");
        jPanel1.add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 420, -1, -1));

        jTextField5.setEditable(false);
        jTextField5.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTextField5.setText("Nombre del patrón:");
        jPanel1.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, -1, -1));

        jTxtPatron1.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTxtPatron1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtPatron1.setToolTipText("");
        jTxtPatron1.setName(""); // NOI18N
        jPanel1.add(jTxtPatron1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 250, -1));

        jTextField6.setEditable(false);
        jTextField6.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTextField6.setText("Nombre del patrón:");
        jPanel1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, -1, -1));

        jTxtPatron2.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTxtPatron2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtPatron2.setToolTipText("");
        jTxtPatron2.setName(""); // NOI18N
        jPanel1.add(jTxtPatron2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, 250, -1));

        jTblPatron1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jTblPatron1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "B", "I", "T", "C", "O", "N"
            }
        ));
        jTblPatron1.setPreferredSize(new java.awt.Dimension(450, 150));
        jTblPatron1.setRequestFocusEnabled(false);
        jTblPatron1.setRowHeight(25);
        jTblPatron1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTblPatron1.setShowGrid(true);
        jTblPatron1.setSurrendersFocusOnKeystroke(true);
        jTblPatron1.getTableHeader().setResizingAllowed(false);
        jScrollPane5.setViewportView(jTblPatron1);
        if (jTblPatron1.getColumnModel().getColumnCount() > 0) {
            jTblPatron1.getColumnModel().getColumn(0).setResizable(false);
            jTblPatron1.getColumnModel().getColumn(0).setHeaderValue("B");
            jTblPatron1.getColumnModel().getColumn(1).setHeaderValue("I");
            jTblPatron1.getColumnModel().getColumn(2).setHeaderValue("T");
            jTblPatron1.getColumnModel().getColumn(3).setHeaderValue("C");
            jTblPatron1.getColumnModel().getColumn(4).setHeaderValue("O");
            jTblPatron1.getColumnModel().getColumn(5).setHeaderValue("N");
        }

        jPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 310, 173));

        jTblPatron2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jTblPatron2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "B", "I", "T", "C", "O", "N"
            }
        ));
        jTblPatron2.setPreferredSize(new java.awt.Dimension(450, 150));
        jTblPatron2.setRequestFocusEnabled(false);
        jTblPatron2.setRowHeight(25);
        jTblPatron2.setShowGrid(true);
        jTblPatron2.setSurrendersFocusOnKeystroke(true);
        jTblPatron2.getTableHeader().setResizingAllowed(false);
        jScrollPane3.setViewportView(jTblPatron2);
        if (jTblPatron2.getColumnModel().getColumnCount() > 0) {
            jTblPatron2.getColumnModel().getColumn(0).setResizable(false);
            jTblPatron2.getColumnModel().getColumn(0).setHeaderValue("B");
            jTblPatron2.getColumnModel().getColumn(1).setHeaderValue("I");
            jTblPatron2.getColumnModel().getColumn(2).setHeaderValue("T");
            jTblPatron2.getColumnModel().getColumn(3).setHeaderValue("C");
            jTblPatron2.getColumnModel().getColumn(4).setHeaderValue("O");
            jTblPatron2.getColumnModel().getColumn(5).setHeaderValue("N");
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 500, 310, 173));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/Imagen pantalla configuración.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 710));

        jMenuBar1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jMnuGenerarTableros.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 3, new java.awt.Color(0, 0, 0)));
        jMnuGenerarTableros.setText("Generar Tableros");
        jMnuGenerarTableros.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jMnuGenerarTableros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMnuGenerarTablerosMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMnuGenerarTableros);

        jMnuIniciarJuego.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 3, new java.awt.Color(0, 0, 0)));
        jMnuIniciarJuego.setText("Iniciar Juego");
        jMnuIniciarJuego.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jMnuIniciarJuego.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMnuIniciarJuegoMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMnuIniciarJuego);

        jMnuMenuPrincipal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 3, new java.awt.Color(0, 0, 0)));
        jMnuMenuPrincipal.setText("Menú Principal");
        jMnuMenuPrincipal.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jMnuMenuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMnuMenuPrincipalMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMnuMenuPrincipal);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMnuGenerarTablerosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMnuGenerarTablerosMouseClicked
        /*Se generan los tableros y se cambia su estado a generados*/
        try{
            bingo.generarTableros();
            tablerosGenerados = true;
            JOptionPane.showMessageDialog(null, "¡Tableros generados exitosamente!", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Ha ocurrido un error en la generación de tableros, contacte al administrador del sistema.", "Advertencia del sistema", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jMnuGenerarTablerosMouseClicked

    private void jMnuIniciarJuegoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMnuIniciarJuegoMouseClicked
        //Se almacen los titulos de los patrones digitados por el usuario
        String titulosPatrones[] = {jTxtPatron1.getText(),jTxtPatron2.getText(),jTxtPatron3.getText()};
        //VALIDACIONES ANTES DE EMPEZAR EL JUEGO
        if(!(jRbAutomatico.isSelected() || jRbManual.isSelected())){
            JOptionPane.showMessageDialog(null, "Debe seleccionar el método de generación de fichas(números) antes de empezar el juego.", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
                    
        if(jCboSistemNumerico.getSelectedIndex() == -1){
            JOptionPane.showMessageDialog(null, "Debe seleccionar el sistema númerico a utilizar antes de empezar el juego.", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
               
        if(jTxtPatron1.getText() == null || jTxtPatron2.getText() == null || jTxtPatron3.getText() == null){
            JOptionPane.showMessageDialog(null, "Debe nombrar los patrones de juego antes de empezar.", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);           
            return;
        }
                                   
        if(!(existenciaPatron1 && existenciaPatron2 && existenciaPatron3)){
            JOptionPane.showMessageDialog(null, "Debe seleccionar los 3 patrones de juego antes de empezar.", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        if(!tablerosGenerados){
            JOptionPane.showMessageDialog(null, "Debe generar los tableros antes de empezar el juego.", "Advertencia del sistema", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
                            
        try{
            bingo.setSistemaNumerico(String.valueOf(jCboSistemNumerico.getSelectedItem()));
            //Se guardan los patrones digitados por el usuario.
            llamarGuardadoPatrones(0, jTblPatron1, titulosPatrones);
            llamarGuardadoPatrones(1, jTblPatron2, titulosPatrones);
            llamarGuardadoPatrones(2, jTblPatron3, titulosPatrones);
            
            //Creación de la nueva ventana a la cual se le envía el objeto que contiene toda la configuración establecida
            dispose();
            EleccionPatron eleccionPatron = new EleccionPatron(bingo);
            eleccionPatron.setVisible(true);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Ha ocurrido un problema al intentar iniciar el juego.", "Advertencia del sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMnuIniciarJuegoMouseClicked

    private void jMnuMenuPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMnuMenuPrincipalMouseClicked
        dispose();
        MenuPrincipal menuPrincipal = new MenuPrincipal();
        menuPrincipal.setVisible(true);
    }//GEN-LAST:event_jMnuMenuPrincipalMouseClicked

    private void jRbAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbAutomaticoActionPerformed
        bingo.setGeneracionNumeros(jRbAutomatico.getText());        
    }//GEN-LAST:event_jRbAutomaticoActionPerformed

    private void jRbManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbManualActionPerformed
       bingo.setGeneracionNumeros(jRbManual.getText());  
    }//GEN-LAST:event_jRbManualActionPerformed

    //Método para darle formato de alineación a las tablas
    public void formatoTablas(JTable tabla){
        /*Se crea un objeto de la clase DefaultTableCellRender para poder manipular con libertad el modelo de la tabla*/
        DefaultTableCellRenderer renderizado = new DefaultTableCellRenderer();
        renderizado.setHorizontalAlignment(SwingConstants.CENTER);
        
        //Finalmente se recorre cada una de las celdas de la tabla y se le asigna el formato requerido
        for (int i = 0; i < tabla.getColumnCount(); i++) {           
            tabla.getColumnModel().getColumn(i).setCellRenderer(renderizado);
        }                
    }

    /*Método que valida que el caracter digitado por el usuario sea una x.
    Además sirve como validación de la existencia de patrone digitados por el usuario.*/
    public void validarCaracter(DefaultTableModel modelo, JTable tabla){
        //Variable utilizada con el fin de forzar la salida del ciclo cuando se evalua el número recién digitado
        boolean caracterEncontrado = false;
        /*Almacena el model listener en una variable temporal para poder eliminar el que es creado con el objeto frame
        esto con el fin de evitar caer en un bucle infinito con el llamado de los métodos*/
        TableModelListener[] listenerTemporal = modelo.getTableModelListeners();
        modelo.removeTableModelListener(listenerTemporal[0]);
                     
        /*Una vez "desactivado" el listener se procede a recorrer las celdas de la tabla y si encuentra un caracter
        diferente al solicitado se lo informa al usuario y borra ese valor.*/
        for (int i = 0; i < tabla.getRowCount(); i++) {
            for (int j = 0; j < tabla.getColumnCount(); j++) {                
                if (!(String.valueOf(tabla.getValueAt(i, j)).equalsIgnoreCase("x") || String.valueOf(tabla.getValueAt(i, j)).equalsIgnoreCase("null"))) {           
                    modelo.setValueAt(null, i, j);
                    caracterEncontrado = true;
                    JOptionPane.showMessageDialog(null, "Caracter inválido, debe ingresar una 'x'", "Información del sistema", JOptionPane.ERROR_MESSAGE);
                    break;
                }else{
                    //Al ingresar un carácter válido se indica que ya existe un patrón
                    if(tabla == jTblPatron1)
                        existenciaPatron1 = true;
                    else if(tabla == jTblPatron2)
                        existenciaPatron2 = true;
                    else
                        existenciaPatron3 = true;                        
                }
            }
            //Si ya encontró el valor digitado incorrectamente fuerza la salida del ciclo
            if(caracterEncontrado)
                break;
        }
                       
        /*Se vuelve a agregar el listener al modelo de la tabla con la variable auxiliar que contiene el listener inicial*/
        modelo.addTableModelListener(listenerTemporal[0]);
    }
    
    /*Se hace un recorrido de la tabla para obtener los campos seleccionados por el usuario y guardarlos en una matriz.
    Si el campo está digitado se guarda un true, de lo contrario un false.*/
    public void llamarGuardadoPatrones(int patron, JTable tabla, String[] titulos){
        boolean[][] matrizPatron = new boolean[6][6];
        for (int i = 0; i < tabla.getRowCount(); i++) {
            for (int j = 0; j < tabla.getColumnCount(); j++) {
                if (String.valueOf(tabla.getValueAt(i, j)).equalsIgnoreCase("x"))
                    matrizPatron[i][j] = true;
                else
                    matrizPatron[i][j] = false;
            }
        }
        /*Una vez obtenidos los valores, se invoca el método encargado de hacer el guardado de todos los patrones, además del título de los mismos.*/
        bingo.guardarPatrones(matrizPatron, patron, titulos);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaConfiguracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaConfiguracion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupGeneracionNumeros;
    private javax.swing.JComboBox<String> jCboSistemNumerico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMnuGenerarTableros;
    private javax.swing.JMenu jMnuIniciarJuego;
    private javax.swing.JMenu jMnuMenuPrincipal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRbAutomatico;
    private javax.swing.JRadioButton jRbManual;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTblPatron1;
    private javax.swing.JTable jTblPatron2;
    private javax.swing.JTable jTblPatron3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTxtPatron1;
    private javax.swing.JTextField jTxtPatron2;
    private javax.swing.JTextField jTxtPatron3;
    // End of variables declaration//GEN-END:variables
}
