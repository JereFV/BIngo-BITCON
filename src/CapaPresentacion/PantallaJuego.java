/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CapaPresentacion;

import CapaLógica.Bingo;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Estudiante
 */
public class PantallaJuego extends javax.swing.JFrame {
    
    private Bingo datos;
    public PantallaJuego(Bingo pdatos) {
        datos = pdatos;
        initComponents();
        jTxtPatronJuego.setText(datos.getTituloPatronElegido());
        formatoGeneracionNumeros();
        buscarCarton();
    }
    
    public PantallaJuego(){
        initComponents();
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblCarton = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTxtNumeroCarton = new javax.swing.JTextField();
        jBtnBuscarTablero = new javax.swing.JButton();
        jPnlResultados = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxaResultados = new javax.swing.JTextArea();
        jTxtNumeroGenerado = new javax.swing.JTextField();
        jBtnGeneracionNumero = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTxtPatronJuego = new javax.swing.JTextField();
        jMnBOpciones = new javax.swing.JMenuBar();
        jMnuMenuPrincipal = new javax.swing.JMenu();
        jMnuReiniciarPartida = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1087, 920));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(462, 390));
        jScrollPane2.setRequestFocusEnabled(false);

        jTblCarton.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jTblCarton.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "B", "I", "T", "C", "O", "N"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTblCarton.setRowHeight(86);
        jTblCarton.setShowGrid(true);
        jScrollPane2.setViewportView(jTblCarton);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 520, 540));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/Cartón Bingo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 580, 550));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Patrón de juego");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 290, -1));

        jTxtNumeroCarton.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jTxtNumeroCarton.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtNumeroCarton.setText("1000");
        jTxtNumeroCarton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtNumeroCartonActionPerformed(evt);
            }
        });
        jPanel1.add(jTxtNumeroCarton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 150, -1));

        jBtnBuscarTablero.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jBtnBuscarTablero.setText("Buscar Tablero");
        jBtnBuscarTablero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBuscarTableroActionPerformed(evt);
            }
        });
        jPanel1.add(jBtnBuscarTablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, -1, -1));

        jPnlResultados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 20)); // NOI18N
        jLabel3.setText("Resultados");
        jPnlResultados.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, -1, -1));

        jTxaResultados.setEditable(false);
        jTxaResultados.setColumns(20);
        jTxaResultados.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jTxaResultados.setRows(5);
        jScrollPane1.setViewportView(jTxaResultados);

        jPnlResultados.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 400, 350));

        jTxtNumeroGenerado.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jTxtNumeroGenerado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPnlResultados.add(jTxtNumeroGenerado, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 430, 110, -1));

        jBtnGeneracionNumero.setFont(new java.awt.Font("Arial Black", 0, 16)); // NOI18N
        jBtnGeneracionNumero.setText("Insertar número");
        jBtnGeneracionNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGeneracionNumeroActionPerformed(evt);
            }
        });
        jPnlResultados.add(jBtnGeneracionNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        jPanel1.add(jPnlResultados, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 130, 420, 470));

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Código del cartón");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 290, -1));

        jTxtPatronJuego.setEditable(false);
        jTxtPatronJuego.setFont(new java.awt.Font("Arial Black", 0, 22)); // NOI18N
        jTxtPatronJuego.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(jTxtPatronJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 70, 350, -1));

        jMnBOpciones.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jMnuMenuPrincipal.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 3, new java.awt.Color(0, 0, 0)));
        jMnuMenuPrincipal.setText("Menú Principal");
        jMnuMenuPrincipal.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jMnuMenuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMnuMenuPrincipalMouseClicked(evt);
            }
        });
        jMnBOpciones.add(jMnuMenuPrincipal);

        jMnuReiniciarPartida.setText("Reiniciar partida");
        jMnuReiniciarPartida.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jMnuReiniciarPartida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMnuReiniciarPartidaMouseClicked(evt);
            }
        });
        jMnBOpciones.add(jMnuReiniciarPartida);

        setJMenuBar(jMnBOpciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1087, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtNumeroCartonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtNumeroCartonActionPerformed
        if(jTxtNumeroCarton.getText().equals("null") || jTxtNumeroCarton.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe digitar un número para ejecutar la búsqueda del cartón.", "Información del sistema", JOptionPane.ERROR_MESSAGE);            
            return;
        }
        
        if(Integer.parseInt(jTxtNumeroCarton.getText()) < 1000 || Integer.parseInt(jTxtNumeroCarton.getText()) > 1099){
            JOptionPane.showMessageDialog(null, "Debe digitar un número entre 1000 y 1099.", "Información del sistema", JOptionPane.ERROR_MESSAGE);
            jTxtNumeroCarton.setText(null);
            return;            
        }               
    }//GEN-LAST:event_jTxtNumeroCartonActionPerformed

    private void jBtnBuscarTableroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBuscarTableroActionPerformed
        //VALIDACIONES
        if(jTxtNumeroCarton.getText().equals("null") || jTxtNumeroCarton.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe digitar un número para ejecutar la búsqueda del cartón.", "Información del sistema", JOptionPane.ERROR_MESSAGE);            
            return;
        }
        
        if(Integer.parseInt(jTxtNumeroCarton.getText()) < 1000 || Integer.parseInt(jTxtNumeroCarton.getText()) > 1099){
            JOptionPane.showMessageDialog(null, "Debe digitar un número entre 1000 y 1099.", "Información del sistema", JOptionPane.ERROR_MESSAGE);
            jTxtNumeroCarton.setText(null);
            return;            
        }                       
        buscarCarton();              
    }//GEN-LAST:event_jBtnBuscarTableroActionPerformed

    private void jBtnGeneracionNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGeneracionNumeroActionPerformed
        //VALIDACIONES
        if(datos.getGeneracionNumeros().equals("Manual")){
            if(jTxtNumeroGenerado.getText().equals("null") || jTxtNumeroGenerado.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe digitar un número.", "Información del sistema", JOptionPane.ERROR_MESSAGE);            
            return;
            }

            if(Integer.parseInt(jTxtNumeroGenerado.getText()) < 1 || Integer.parseInt(jTxtNumeroGenerado.getText()) > 95){
                JOptionPane.showMessageDialog(null, "Debe digitar un número entre 1 y 95.", "Información del sistema", JOptionPane.ERROR_MESSAGE);
                jTxtNumeroGenerado.setText(null);
                return;
            }
        }
                              
        try{
            /*Según la forma de generación de los números se hace la invocación de métodos con variantes en los párametros.
            Posteriormente se muestra en pantalla el número generado o digitado.*/
            if(datos.getGeneracionNumeros().equals("Manual")){
                if(datos.validarNumeroDigitadoRepetido(Integer.parseInt(jTxtNumeroGenerado.getText()))){
                    JOptionPane.showMessageDialog(null, "El número ingresado ya fue digitado anteriormente, porfavor intente con otro número.", "Información del sistema", JOptionPane.INFORMATION_MESSAGE);
                    jTxtNumeroGenerado.setText(null);
                    return;
                }                
                jTxaResultados.append(datos.ejecutarRondaJuego(Integer.parseInt(jTxtNumeroGenerado.getText())) + "\n");                   
            }else
                jTxaResultados.append(datos.ejecutarRondaJuego(0) + "\n");
            
            /*Se recorre el cartón actual, si el número ingresado se encuentra en él, se setean par de asteriscos como ayuda visual
            en la celda correspondiente.*/
            for (int i = 0; i < jTblCarton.getRowCount(); i++) {
                for (int j = 0; j < jTblCarton.getColumnCount(); j++) {                     
                    if(datos.validarNumeroGanador(Integer.parseInt(jTxtNumeroCarton.getText()) - 1000, i, j)){
                        //Validación para evitar setear otro par de asteriscos sobre una celda que ya los contiene
                        if(!String.valueOf(jTblCarton.getValueAt(i, j)).contains("*"))
                            jTblCarton.setValueAt("*" + jTblCarton.getValueAt(i, j) + "*", i, j);
                    }                                                        
                }
            }
            
            //Se valida si hay algún ganador para terminar la partida
            String hayGanadores = datos.validarCartonesGanadores();
            if(!hayGanadores.equals("")){
                /*Se desabilitan las funcioanalidades de la pantalla, menos el botón de buscar tableros.
                Esto con el objetivo de poder visualizar los cartones ganadores una vez finalizada la partida.*/
                jBtnGeneracionNumero.setEnabled(false);               
                jTxtNumeroGenerado.setEnabled(false);
                jMnuMenuPrincipal.hide();
                jMnuReiniciarPartida.hide();
                
                //Pantalla final del juego, donde se indican el ganador o ganadores y las opciones siguientes
                PantallaFinal finJuego = new PantallaFinal(hayGanadores, datos, this);
                finJuego.setVisible(true);
            }else
                JOptionPane.showMessageDialog(null, "El número fue ingresado correctamente", "Información del sistema", JOptionPane.INFORMATION_MESSAGE);
            
            jTxtNumeroGenerado.setText("");
            
        }catch(Exception ex){
             JOptionPane.showMessageDialog(null, "Estimado usuario ha ocurrido un error al intentar ingresar el número. Contacte al administrador del sistema.", "Información del sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnGeneracionNumeroActionPerformed

    private void jMnuMenuPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMnuMenuPrincipalMouseClicked
        int opcion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea volver al menú principal? Perderá toda la configuración del juego.", "Seleccione una opción", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);        
        if (opcion == 0){
            dispose();
            MenuPrincipal menuPrincipal = new MenuPrincipal();
            menuPrincipal.setVisible(true);
        }                   
    }//GEN-LAST:event_jMnuMenuPrincipalMouseClicked

    private void jMnuReiniciarPartidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMnuReiniciarPartidaMouseClicked
        int opcion = JOptionPane.showConfirmDialog(null, "¿Desea reiniciar la partida? Perderá el progreso de la partida actual.", "Seleccione una opción", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);        
        if (opcion == 0){
            datos.limpiarNumerosGanadores();
            datos.limpiarCartonesGanadores();
            datos.limpiarCantidadElementosPatron();
            
            EleccionPatron eleccionPatron = new EleccionPatron(datos);
            eleccionPatron.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_jMnuReiniciarPartidaMouseClicked

    /*Seteo de valores del cartón respectivo*/
    public void buscarCarton(){       
        try{
            for (int i = 0; i < jTblCarton.getRowCount(); i++) {
                for (int j = 0; j < jTblCarton.getColumnCount(); j++) {
                    jTblCarton.setValueAt(datos.setearValoresCarton(Integer.parseInt(jTxtNumeroCarton.getText()) - 1000, i, j), i, j);
                    
                    //Si el número en la celda especificada ya salió, se le setean un par de asteriscos como ayuda visual.
                    if(datos.validarNumeroGanador(Integer.parseInt(jTxtNumeroCarton.getText()) - 1000, i, j)){
                        jTblCarton.setValueAt("*" + jTblCarton.getValueAt(i, j) + "*", i, j);
                    }                                                     
                }
            }
            //Una vez llena la tabla, se le aplica un centrado horizontal
            formatoTablas(); 
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Estimado usuario ha ocurrido un error al intentar buscar el cartón especificado. Contacte al administrador del sistema.", "Información del sistema", JOptionPane.ERROR_MESSAGE);
        }
        
    }
        
    //Método para darle formato de alineación a las tablas
    public void formatoTablas(){
        /*Se crea un objeto de la clase DefaultTableCellRender para poder manipular con libertad el modelo de la tabla*/
        DefaultTableCellRenderer renderizado = new DefaultTableCellRenderer();
        renderizado.setHorizontalAlignment(SwingConstants.CENTER);
        
        //Finalmente se recorre cada una de las columnas de la tabla y se le asigna el formato requerido
        for (int i = 0; i < jTblCarton.getColumnCount(); i++) {           
            jTblCarton.getColumnModel().getColumn(i).setCellRenderer(renderizado);
        }                
    }
    
    /*Se realiza de manera dinámica la parte de la pantalla donde se generan los números.
    Esto con el fin de evitar tener controles innecesarios, según el tipo de generación de números.*/
    public void formatoGeneracionNumeros(){
        if (datos.getGeneracionNumeros().equals("Automático")){
            jTxtNumeroGenerado.hide();
            jBtnGeneracionNumero.setText("Generar número");                      
        }
    }
          
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBuscarTablero;
    private javax.swing.JButton jBtnGeneracionNumero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMnBOpciones;
    private javax.swing.JMenu jMnuMenuPrincipal;
    private javax.swing.JMenu jMnuReiniciarPartida;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlResultados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblCarton;
    private javax.swing.JTextArea jTxaResultados;
    private javax.swing.JTextField jTxtNumeroCarton;
    private javax.swing.JTextField jTxtNumeroGenerado;
    private javax.swing.JTextField jTxtPatronJuego;
    // End of variables declaration//GEN-END:variables
}
